-----------------------PROCEDURES--------------------------
-----------------------------------------------------------1
CREATE PROCEDURE REVIEWGAMESAMEYEAR
AS
DECLARE CURREV CURSOR FOR SELECT KOD_REVIEW FROM REVIEW;
DECLARE 
		@DATAREV DATE,
		@DATAGAME DATE,
		@NAZWAREV VARCHAR(50),
		@NAZWAGAME VARCHAR(50),
		@KODREV INTEGER,
		@IDGAME INTEGER;
BEGIN
	PRINT '---Review of the game the same year---';
	OPEN CURREV
	FETCH NEXT FROM CURREV INTO @KODREV;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @DATAREV = DATE_WRITED FROM REVIEW WHERE KOD_REVIEW = @KODREV;
		DECLARE FORGAMES CURSOR FOR SELECT ID_GAME FROM GAMEREV WHERE KOD_REVIEW = @KODREV;
		OPEN FORGAMES
		FETCH NEXT FROM FORGAMES INTO @IDGAME;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SELECT @DATAGAME = REDATE FROM GAMES WHERE IDGAME = @IDGAME;
			IF YEAR(@DATAGAME) = YEAR(@DATAREV)
			BEGIN 
				SELECT @NAZWAREV = TITLE FROM REVIEW WHERE KOD_REVIEW = @KODREV;
				SELECT @NAZWAGAME = NAGAME FROM GAMES WHERE IDGAME = @IDGAME;
				PRINT 'REVIEW: ' + @NAZWAREV + ' GAME: ' + @NAZWAGAME + ' YEAR: ' + CAST(YEAR(@DATAREV) AS VARCHAR) + ';';
			
			END;
			FETCH NEXT FROM FORGAMES INTO @IDGAME;
		END;

		CLOSE FORGAMES;
		DEALLOCATE FORGAMES;
		
		FETCH NEXT FROM CURREV INTO @KODREV;
	END;
	CLOSE CURREV;
	DEALLOCATE CURREV;
	PRINT '---------------------------------';
END;

------------------------------------------------------------2
CREATE PROCEDURE COMPANYGENRE @COMPANYNAME VARCHAR(50), @GENREP VARCHAR(50)
AS
DECLARE 
	@IDCOM INTEGER,
	@IDGAME INTEGER
BEGIN
	IF EXISTS (SELECT 1 FROM COMPANY WHERE NAME = @COMPANYNAME)
	BEGIN
		IF EXISTS (SELECT 1 FROM GENRE WHERE GENRE_NAZWA = @GENREP)
		BEGIN
			SELECT @IDCOM = ID_COMPANY FROM COMPANY WHERE NAME = @COMPANYNAME;
			IF EXISTS(SELECT 1 FROM GAMES G 
								JOIN GAMECOMM GC ON GC.ID_GAME = G.IDGAME
								WHERE GC.ID_COMPANY = @IDCOM AND G.GENRE = @GENREP)
			BEGIN
				PRINT 'Firma ' + @COMPANYNAME + ' ma gry z tego gatunku: ' + @GENREP;
			END;
			ELSE
			BEGIN
				PRINT 'Firma ' + @COMPANYNAME + ' nie ma gier z tego gatunku: ' + @GENREP;
			END;
		END;
		ELSE
		BEGIN
			RAISERROR('Nie istnieje takiego gatunku',16,1); 
		END;
	END;
	ELSE
	BEGIN
		RAISERROR('Nie istnieje nazwy firmy',16,1); 
	END;
END;

--------------------------TRIGGERS--------------------------
------------------------------------------------------------1
CREATE TRIGGER SPRACAPITOLIZ ON COMPANY
FOR INSERT 
AS
BEGIN
	DECLARE @CAPITOL INTEGER;
	SELECT @CAPITOL = CAPITALIZATION FROM INSERTED;
	IF @CAPITOL < 0.10
	BEGIN
		Rollback;
		PRINT 'Capitalization nie moÅ¼e byc mniejsza za 0.10';
	END;
END;

-----------------------------------------------------------------2
CREATE TRIGGER NORMALTITLE ON REVIEW
FOR INSERT
AS
BEGIN
	DECLARE @TITLEREV VARCHAR(30);
	SELECT @TITLEREV = TITLE FROM INSERTED;
	IF LEN(@TITLEREV) < 1
	BEGIN
		ROLLBACK;
		PRINT 'Za mala nazwa recenzji';
	END;
END;

-------------------------------------------------------------------3
CREATE TRIGGER ONLYKNOWNRELEASEDGAME ON GAMEREV
FOR INSERT
AS
BEGIN
	DECLARE @IDGAME INTEGER, @IDREV INTEGER;
	SELECT @IDGAME = ID_GAME, @IDREV = KOD_REVIEW  FROM INSERTED;
	IF (SELECT REDATE FROM GAMES WHERE IDGAME = @IDGAME) IS NULL 
	BEGIN
		ROLLBACK;
		PRINT 'Nie ma informacji, ze ta gra w ogole wyjdzie.Prosze Sprawdzic recenzje!';
	END;
END;